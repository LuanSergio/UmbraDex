@use 'tools/index' as *;
@use 'settings/colors-type' as typeColors;
@use 'helpers/icon.scss' as *;

.content {
  color: get-color(light);
  height: 100vh;
}

.container {
  display: flex;
  flex-wrap: wrap;
  padding-top: rem(72);
  justify-content: space-between;
  align-items: center;
}

.pokemonContainer {
  position: relative;
  overflow: visible;
}

.pokemon {
  padding-left: rem(186);
  z-index: 1;
  position: relative;
  z-index: get-index-level(lvl1);
}

.japaneseName {
  position: absolute;
  font-size: rem(155);
  white-space: nowrap;
  left: rem(-24);
  font-weight: bold;
  // color: #b7f8b0;
  opacity: 0.88;
}

.name {
  font-size: rem(88);
  text-transform: capitalize;
  word-wrap: break-word;
  max-width: rem(405);
  margin-top: 0;
  margin-bottom: rem(8);
}

.basicInfo {
  display: flex;
  align-items: center;
  margin-bottom: rem(32);
  max-width: rem(350);
}

.number {
  font-size: rem(56);
  font-weight: bold;
  display: flex;
  align-items: center;
  line-height: 1;
  letter-spacing: 0.8;

  &::after {
    content: '|';
    font-size: rem(42);
    margin-left: rem(16);
    margin-right: rem(16);
  }
}

.generationDescriptionContainer {
  display: flex;
  flex-wrap: wrap;
  max-width: rem(405);
  padding-top: 0;
  padding-bottom: 0;
}

.generationDescriptionOption {
  font-weight: bold;
  color: get-color(light);
  background-color: transparent;
  border-style: inset;
  border-top: none;
  border-left: none;
  border-right: none;
  margin-right: rem(12);
  border-bottom-color: get-color(light);
  border-bottom-width: rem(3);
  border-bottom-left-radius: rem(1);
  border-bottom-right-radius: rem(1);
  margin-bottom: rem(8);
  font-size: rem(32);
  opacity: 0.8;
  transition: opacity 0.2s;
  &.active,
  &:hover {
    opacity: 1;
    text-shadow: rem(4) rem(2) rem(4) #00000040;
  }
}

.description {
  font-weight: bold;
  margin-top: 0;
  max-width: rem(400);
  margin-bottom: rem(0);
  font-size: rem(26);
  line-height: 1.5;
  text-shadow: rem(4) rem(4) rem(4) #00000040;
}

.sideNote {
  display: block;
  margin-top: rem(8);
  font-size: rem(16);
}

.typeContainer {
  display: flex;
}

.type {
  align-items: center;
  font-size: 0;
  color: get-color(light);
  display: flex;
  transition: opacity ease-out 0.25s;
  height: rem(64);

  &:not(:last-child) {
    margin-right: rem(6);
  }

  &::before {
    @include icon;
    display: flex;
    align-items: center;
    border-radius: 50%;
    // font-size: rem(36);
    font-size: rem(32);
    justify-content: center;
    padding: rem(3);
  }
}

@each $type, $color in typeColors.$defaults {
  .content.#{$type} {
    // background: map-get(typeColors.$gradient, $type);
    background: map-get(typeColors.$background, $type);
  }
  .type.#{$type}::before {
    color: #fff;
    content: get-icon($type);
  }
}
