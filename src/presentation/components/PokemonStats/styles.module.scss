@use 'tools/index' as *;
@use 'animations/increasing-horizontal';
@use 'settings/_breakpoints' as *;

.stats {
  align-items: center;
  background-color: var(--current-dark-type-color);
  border-radius: 24px;
  display: flex;
  flex-flow: column-reverse wrap;
  justify-content: center;
  margin-left: auto;
  margin-right: auto;
  padding: rem(48) rem(10) rem(48);
  transition: background-color 0.28s ease-out;
  width: calc(100% - 8px);
  width: 100%;
}

.statsList {
  width: 100%;
}

.statsHolder {
  align-items: flex-start;
  display: flex;
  flex-direction: column;
  width: 100%;

  &:not(:last-child) {
    margin-bottom: rem(40);
  }
}

.statsLabel {
  display: block;
  font-size: rem(18);
  font-weight: bold;
  margin-bottom: rem(8);
  margin-right: rem(16);
  text-transform: capitalize;
  width: rem(140);
}

.statsMeter {
  align-self: center;
  background-color: get-color(light);
  border-radius: 4px;
  height: rem(24);
  overflow: hidden;
  width: 80%;
}

.statsMeterValue {
  animation: increasing-horizontal 2s forwards;
  background-color: var(--current-light-type-color);
  height: rem(32);
  transform-origin: left;
  transition: background-color 0.28s ease-out, width 0.8s ease;
}

.statsGraph {
  height: rem(250);
  margin-bottom: rem(64);
  max-width: rem(370);
  width: 100%;
}

@media only screen and (min-width: $xs) {
  .stats {
    padding: rem(48) rem(20) rem(48);
  }
}

@media only screen and (min-width: $lg) {
  .stats {
    flex-flow: row nowrap;
    justify-content: space-between;
    margin-left: initial;
    margin-right: initial;
    padding: rem(48) rem(0) rem(48) rem(32);
  }

  .statsMeter {
    height: rem(20);
    width: rem(196);
  }

  .statsHolder {
    align-items: center;
    flex-direction: row;
  }

  .statsGraph {
    margin-bottom: 0;
  }

  .statsLabel {
    margin-bottom: rem(0);
  }
}
