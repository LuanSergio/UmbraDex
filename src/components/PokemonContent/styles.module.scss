@use 'tools/index' as *;
@use 'settings/colors-type' as typeColors;
@use 'helpers/icon.scss' as *;
@use 'helpers/container.scss' as *;
@use 'settings/_breakpoints' as *;

.basicInformation {
  margin-bottom: rem(20);
}

.content {
  color: get-color(light);
  margin-bottom: rem(40);
}

.content--small {
  margin-top: calc(rem(24) + var(--header-height));
}

.content--large {
  margin-top: calc(rem(24) + var(--header-height));
}

.container {
  display: grid;
  gap: rem(40) rem(40);
  grid-template-columns: 1fr;
}

.contentOdd {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 100%;
}

.contentEven {
  align-items: flex-start;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 100%;
}

.contentEven > *:not(:last-child) {
  margin-bottom: rem(20);
}

.characteristics {
  background-color: var(--current-dark-type-color);
  border-radius: 8px;
  padding: rem(32) rem(14);
  width: 100%;
}

.abilities {
  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  margin-bottom: rem(24);
}

.abilities > *:not(:last-child) {
  margin-right: rem(10);
}

.abilitiesTitle {
  font-size: rem(18);
  margin-bottom: rem(20);
  margin-top: 0;
  text-align: center;
}

.abilitiesList {
  align-items: center;
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(auto-fit, minmax(100px, min-content));
  justify-content: center;
  margin-bottom: 0;
  margin-top: 0;
  width: 100%;
}

.ability {
  background-color: var(--current-type-color);
  border-radius: rem(4);
  font-weight: bold;
  padding: 8px 10px;
  text-align: center;
  white-space: nowrap;
}

.physicalDimensions {
  display: flex;
  justify-content: space-around;
  margin-bottom: 0;
  margin-top: 0;
  text-align: left;
}

.physicalDimensions > *:not(:last-child) {
  margin-right: rem(20);
}

.physicalDimensionsList {
  align-items: center;
  display: flex;
}

.physicalDimensionsList > *:not(:last-child) {
  margin-right: rem(10);
}

.physicalDimensionsLabel {
  font-size: rem(18);
  font-weight: bold;
  text-align: left;
}

.physicalDimensionsValue {
  font-size: rem(16);
  margin-left: 0;
  text-align: right;
}

.moveListContainer {
  margin-top: rem(40);
}

.pokeballDecoration {
  bottom: 132px;
  color: var(--current-type-color);
  display: none;
  filter: brightness(90%);
  position: absolute;
  right: 50%;
  transform: translateX(160%) rotate(40deg);
  width: 0;
  z-index: get-index-level(negative);
}

@media only screen and (min-width: $xs) {
  .abilitiesList {
    grid-template-columns: repeat(auto-fit, minmax(0, min-content));
  }
}

@media only screen and (min-width: $xl) {
  .container {
    gap: rem(40);
    grid-template-columns: 5fr 3fr;
  }

  .content--large {
    margin-top: calc(rem(92) + var(--header-height));
  }

  .content--small {
    margin-top: calc(rem(38) + var(--header-height));
  }

  .physicalDimensions {
    margin-top: rem(16);
  }

  .holder {
    margin-left: auto;
    margin-right: auto;
    max-width: 100%;
    overflow: hidden;
    position: relative;
    width: 100%;
  }

  .pokeballDecoration {
    display: block;
    width: 560px;
  }
}
