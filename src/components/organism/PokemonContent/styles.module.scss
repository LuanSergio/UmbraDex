@use 'tools/index' as *;
@use 'settings/colors-type' as typeColors;
@use 'helpers/icon.scss' as *;
@use 'helpers/container.scss' as *;
@use 'settings/_breakpoints' as *;

.content {
  color: get-color(light);
  min-height: 100vh;
  transition: background-color 0.1s;
}

.holder {
  margin-top: rem(16);
}

.smallHolder {
  margin-top: rem(16);
}

.container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin-top: rem(8);
}

@media only screen and (min-width: $sm) {
  .holder {
    margin-top: rem(28);
  }
}

@media only screen and (min-width: $md) {
  .holder {
    display: flex;
    justify-content: center;
  }

  .smallHolder {
    display: flex;
    justify-content: center;
  }
}

@media only screen and (min-width: $lg) {
  .holder {
    display: block;
    margin-top: rem(72);
  }

  .smallHolder {
    display: block;
    margin-top: rem(24);
  }
}

@media only screen and (min-width: $xl) {
  .container {
    justify-content: space-between;
  }
}

@each $type, $color in typeColors.$defaults {
  .content.#{$type} {
    background-color: map-get(typeColors.$background, $type);
  }
}
