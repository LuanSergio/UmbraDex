@use 'tools/index' as *;
@use 'settings/colors-type' as typeColors;
@use 'helpers/icon.scss' as *;
@use 'helpers/container.scss' as *;
@use 'settings/_breakpoints' as *;

.basicInformation {
  margin-bottom: rem(20);
}

.content {
  color: get-color(light);
  margin-bottom: rem(40);
}

.container {
  display: grid;
  gap: rem(40) rem(40);
  grid-template-columns: 1fr;
}

.content1 {
  width: 100%;
}

.content2 {
  align-items: flex-start;
  display: flex;
  flex-direction: column;
  width: 100%;
}

.characteristic {
  background-color: var(--current-dark-type-color);
  border-radius: rem(8);
  display: flex;
  justify-content: space-around;
  padding: rem(20) rem(14);
  text-align: left;
  width: 100%;
}

.characteristic > *:not(:last-child) {
  margin-right: rem(20);
}

.characteristicLabel {
  font-size: rem(18);
  font-weight: bold;
  text-align: left;
}

.characteristicValue {
  font-size: rem(16);
  margin-left: 0;
  margin-top: rem(12);
  text-align: right;
}

.content--small {
  margin-top: calc(rem(24) + var(--header-height));
}

.content--large {
  margin-top: calc(rem(24) + var(--header-height));
}

@media only screen and (min-width: $lg) {
  .container {
    gap: 40px 40px;
    grid-template-columns: 5fr 3fr;
  }

  .content--large {
    margin-top: calc(rem(92) + var(--header-height));
  }

  .content--small {
    margin-top: calc(rem(38) + var(--header-height));
  }
}
