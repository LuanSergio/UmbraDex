@use '@styles/tools/index' as *;
@use '@styles/helpers/icon.scss' as *;
@use '@styles/settings/colors-type' as colorsType;

.card {
  align-items: center;
  border-radius: rem(12);
  cursor: pointer;
  display: flex;
  flex-direction: column;
  height: rem(277);
  justify-content: center;
  padding: rem(10) rem(30);
  position: relative;
  width: rem(250);
}

.card:hover .background {
  opacity: 0.83;
}

.number {
  color: get-color(light);
  font-size: rem(20);
  font-weight: bold;
  position: absolute;
  top: rem(10);
  z-index: get-index-level(lvl3);
}

.pokemonContainer {
  overflow-x: visible;
  position: relative;
}

.pokeball {
  position: absolute;
  right: 0;
  top: rem(7);
  transform: translateX(10%);
  width: rem(155);
  z-index: get-index-level(lvl1);
}

.pokemon {
  position: relative;
  height: rem(200);
  width: rem(200);
  z-index: get-index-level(lvl2);
}

.name {
  background-color: get-color(light);
  border-radius: rem(6);
  bottom: 0;
  display: block;
  font-weight: bold;
  font-size: rem(20);
  left: 50%;
  padding: rem(6) rem(16);
  position: absolute;
  text-align: center;
  text-transform: capitalize;
  transform: translate(-50%, 36%);
  transition: ease-out 0.35s;
  white-space: nowrap;
  z-index: get-index-level(lvl3);
}

.typeContainer {
  align-items: center;
  bottom: 0;
  display: flex;
  justify-content: center;
  position: absolute;
  transform: translateY(40%);
  z-index: get-index-level(lvl3);
}

.type {
  align-items: center;
  border-radius: rem(6);
  color: get-color(light);
  display: flex;
  font-size: rem(18);
  font-weight: bold;
  padding: rem(5) rem(12);
  text-align: center;
  text-transform: capitalize;
  transition: opacity ease-out 0.25s;
}

.type:not(:last-child) {
  margin-right: rem(5);
}

.type::before {
  @include icon;
  align-items: center;
  background-color: get-color(light);
  border-radius: 50%;
  display: flex;
  font-size: rem(12);
  justify-content: center;
  margin-right: rem(6);
  padding: rem(3);
  width: rem(19);
  height: rem(19);
}

.background {
  border-radius: rem(12);
  height: rem(277);
  position: absolute;
  transition: opacity ease-out 0.15s;
  width: rem(250);
}

@each $type, $color in colorsType.$types {
  .background.#{$type} {
    background: linear-gradient(
      180deg,
      $color 0%,
      rgba($color: $color, $alpha: 0.45) 100%
    );
  }

  .name.#{$type} {
    color: $color;
  }

  .type.#{$type} {
    background-color: $color;
  }
  .type.#{$type}::before {
    color: $color;
    content: get-icon($type);
  }
}
