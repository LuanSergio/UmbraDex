@use 'tools/index' as *;
@use 'settings/colors-type' as typeColors;
@use 'helpers/icon.scss' as *;
@use 'settings/_breakpoints' as *;

.webDoor {
  height: var(--screen-height);
  max-height: 920px;
  min-height: 600px;
  width: 100%;
}

.commonWebDoor {
  @property --webdoor-primary-color {
    inherits: false;
    initial-value: transparent;
    syntax: '<color>';
  }

  background-color: var(--webdoor-primary-color);
  display: flex;
  height: 100%;
  justify-content: center;
  overflow: hidden;
  transition: background-color 0.4s ease;
}

.actionsContainer {
  left: rem(20);
  opacity: 0;
  position: absolute;
  top: rem(96);
  transition: opacity 0.2s ease-in;
  z-index: get-index-level(lvl2);
}

.commonWebDoor:hover .actionsContainer {
  opacity: 1;
}

.actions {
  display: flex;
  font-size: rem(14);
}

.actions > *:not(:last-child) {
  margin-right: rem(12);
}

.refreshIcon,
.shinyIcon {
  width: em(40);
}

.container {
  flex-shrink: 0;
  padding-top: calc(rem(80) + var(--header-height));
  position: relative;
  width: 100%;
}

@media only screen and (min-width: $xs) {
  .webDoor {
    max-height: none;
    min-height: rem(760);
  }
}

@media only screen and (min-width: $md) {
  .webDoor {
    min-height: rem(852);
  }

  .actions {
    font-size: rem(18);
  }
}

@media only screen and (min-width: $lg) {
  .webDoor {
    max-height: rem(800);
    min-height: rem(640);
  }

  .actionsContainer {
    left: rem(40);
  }

  .container {
    padding-top: 0;
  }
}

@media only screen and (min-width: $xl) {
  .webDoor {
    max-height: rem(1000);
    min-height: rem(680);
  }
}

@media only screen and (min-width: $xxl) {
  .webDoor {
    max-height: rem(1360);
    min-height: rem(1080);
  }
}
